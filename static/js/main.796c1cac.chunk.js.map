{"version":3,"sources":["components/Form.js","components/Info.js","components/Lyrics.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setSearch","isLoading","useState","error","setError","artist","song","info","setInfo","handleChange","e","target","value","trim","name","useEffect","className","onSubmit","preventDefault","type","placeholder","onChange","Info","Object","keys","length","strArtist","src","strArtistThumb","alt","strGenre","strBiographyES","strBiographyEN","Lyrics","lyrics","App","setIsLoading","search","setLyrics","songTitle","setSongTitle","artistInfo","setArtistInfo","a","url_api_lyrics","url_api_info","requests","fetch","Promise","all","responses","map","res","json","artists","document","querySelector","scrollIntoView","behavior","getLyricsByAPI","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.796c1cac.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Form = ({ setSearch, isLoading }) => {\n    const [error, setError] = useState(true)\n    const [info, setInfo] = useState({\n        artist: '',\n        song: ''\n    })\n    const { artist, song } = info\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (artist.trim() === '' || song.trim() === '') {\n            setError(true)\n            return\n        }\n        setError(false)\n        setSearch(info)\n    }\n    const handleChange = (e) => {\n        if (e.target.value.trim() === '') setError(true)\n        setInfo({\n            ...info,\n            [e.target.name]: e.target.value\n        })\n    }\n    useEffect(() => {\n        if (isLoading) return\n        const reset = () => {\n            setInfo({\n                artist: '',\n                song: ''\n            })\n            setError(true)\n        }\n        reset()\n    }, [isLoading])\n    return (\n        <>\n            <div className='bg-info'>\n                <div className='container'>\n                    <div className='row'>\n                        <form onSubmit={handleSubmit}\n                            className='col card text-white bg-transparent mb-5 pt-5 pb-2'>\n                            <fieldset>\n                                <legend className='text-center'>\n                                    Buscador de letras de tu Canciones\n                                </legend>\n                                <div className='row'>\n                                    <div className='col-md-6'>\n                                        <div className='form-group'>\n                                            <label>Artista</label>\n                                            <input\n                                                type=\"text\"\n                                                className='form-control'\n                                                placeholder='Nombre del Artista'\n                                                name='artist'\n                                                onChange={handleChange}\n                                                value={artist}\n                                            />\n                                            {\n                                                error && artist.trim() === ''\n                                                    ? < small >* Campo Obligatorio</small>\n                                                    : null\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className='col-md-6'>\n                                        <div className='form-group'>\n                                            <label>Canción</label>\n                                            <input\n                                                type=\"text\"\n                                                className='form-control'\n                                                placeholder='Nombre de la Canción'\n                                                name='song'\n                                                onChange={handleChange}\n                                                value={song}\n\n                                            />\n                                            {\n                                                error && song.trim() === ''\n                                                    ? < small >* Campo Obligatorio</small>\n                                                    : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                                <button\n                                    type='submit'\n                                    className='btn btn-primary float-right'\n                                >\n                                    Buscar\n                                </button>\n                                {\n                                    isLoading\n                                        ? (\n                                            <div>\n                                                <h4>Buscando, Espere por favor...</h4>\n                                            </div>\n                                        )\n                                        : null\n                                }\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Info = ({ info }) => {\n    if (Object.keys(info).length === 0) return null\n    return (\n        <>\n            <div className='card border-light'>\n                <div className='card-header bg-primary text-light font-weight-bold'>\n                    <h4>Información Artista: {info.strArtist}</h4>\n                </div>\n                <div className='card-body'>\n                    <img src={info.strArtistThumb} alt=\"Foto Artista\" />\n                    {\n                        info.strGenre\n                            ? <h4><strong>Genero:</strong>{info.strGenre}</h4>\n                            : null\n                    }\n                    <h2>Biografía:</h2>\n                    <p>\n                        {\n                            info.strBiographyES\n                                ? info.strBiographyES\n                                : info.strBiographyEN\n                        }\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport { Info }\n\n","import React from 'react'\n\nconst Lyrics = ({ lyrics, song }) => {\n    if (lyrics.length === 0) return null\n    return (\n        <>\n            <h1>Letra de la canción</h1>\n            <h2> \"{song}\" </h2>\n            <p className='letra'>{lyrics}</p>\n        </>\n    )\n}\n\nexport { Lyrics }\n\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport { Info } from './components/Info';\nimport { Lyrics } from './components/Lyrics';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [search, setSearch] = useState({})\n  const [lyrics, setLyrics] = useState('')\n  const [songTitle, setSongTitle] = useState('')\n  const [artistInfo, setArtistInfo] = useState({})\n  useEffect(() => {\n    if (Object.keys(search).length === 0) return\n    setIsLoading(true)\n    const getLyricsByAPI = async () => {\n      const url_api_lyrics = `https://api.lyrics.ovh/v1/${search.artist}/${search.song}`\n      const url_api_info = `https://www.theaudiodb.com/api/v1/json/2/search.php?s=${search.artist}`\n      const requests = [\n        fetch(url_api_lyrics),\n        fetch(url_api_info)\n      ]\n      const responses = await Promise.all(requests)\n      const [lyrics, info] = await Promise.all(responses.map(res => res.json()))\n\n      setLyrics(lyrics.lyrics)\n      setSongTitle(search.song)\n      setArtistInfo(info.artists[0])\n      setIsLoading(false)\n      const goToRead = document.querySelector('#read')\n      goToRead.scrollIntoView({ behavior: 'smooth' })\n    }\n    getLyricsByAPI()\n  }, [search])\n  return (\n    <>\n      <Form setSearch={setSearch} isLoading={isLoading} />\n      <div className='container mt-5' id='read'>\n        <div className='row mt-5' >\n          <div className='col-md-6' >\n            <Info info={artistInfo} />\n          </div>\n          <div className='col-md-6'>\n            <Lyrics lyrics={lyrics} song={songTitle} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}